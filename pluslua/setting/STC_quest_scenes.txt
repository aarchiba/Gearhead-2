MetaScene 0 2
	name <the # Arena>
	desig <QS_MechaArena>
	ArenaMap
	MapWidth 50
	MapHeight 50
	type <Arena>
	special <SHOWALL SOLO ARENA NOPILLAGE UNCHARTABLE>
	terrain <GROUND>

	lua
		-- On startup, if the arena is ready then start the battle.
		-- If no battle is ready then return the PC to the previous scene.
		P.START = function( self )
			if self:GetArenaState() == NAV_AS_READY then
				-- A battle is about to start.
				self:SetArenaState( NAV_AS_BATTLE );
				gh_Alert( "You enter the arena. Prepare to battle." );
				self:ResetArenaRecharge();
				if self:GetChallenger() ~= nil then
					-- There's a challenger. Better start a conversation now.
					gh_StartChat( self:GetChallenger() );
				end;

			elseif self:GetArenaState() == NAV_AS_BATTLE then
				-- We return to a battle in progress, probably from a saved game.
				gh_Print( "The battle rages on." );
			else
				-- No battle going on now. Remove the PC from the arena.
				gh_Print( "You enter the arena. There's no fight going on here now." );
				gh_Return();
			end
		end

		P.NU1 = function( self )
			-- If all player units have left the map, return. Also, probably
			-- lose the battle.
			if gh_CountActiveModels( NAV_DEFPLAYERTEAM ) < 1 then
				gh_Return();
				if self:GetArenaState() == NAV_AS_BATTLE then
					self:SetArenaState( NAV_AS_LOSS );
					gh_Alert( "You have lost the battle." );
					self:EndBattle();
					gh_LoseRenown();
				end
			end
		end

		P.NU2 = function( self )
			-- If all enemy units have left the map, return. Also, probably
			-- win the battle.
			if gh_CountActiveModels( 2 ) < 1 then
				gh_Return();
				if self:GetArenaState() == NAV_AS_BATTLE then
					self:SetArenaState( NAV_AS_WIN );
					self:AddArenaWin();
					gh_Alert( "You have won the battle!" );
					gh_GiveXP( 100 );

					if self:GetChallenger() ~= nil then
						-- There's a challenger. Better start a conversation now.
						gh_StartChat( self:GetChallenger() );
					end;

					self:EndBattle();
				end
			end
		end

		P.EndBattle = function( self )
			-- At the end of a battle, whether you've won or lost, the challenger
			-- gets moved back to their home scene.
			local npc = self:GetChallenger();
			if npc ~= nil then
				gh_MoveAndPacify( npc , self:GetChallengerHome() );
				self:SetChallenger( nil );
			end
		end;

	endlua

	start <if= SelfArenaState NAV_AS_Ready else GoCheckBattle          Alert 1   SetSelfArenaState NAV_AS_Battle SetSelfArenaRecharge if# SelfChallengerID 0 ForceChat SelfChallengerID>
	GoCheckBattle <if= SelfArenaState NAV_AS_Battle else GoBoringStart Print 2>
	GoBoringStart <Print 3 Return>
	nu1 <if= T1 0 Return   if= SelfArenaState NAV_AS_Battle SetSelfArenaState NAV_AS_Loss  Alert 5 Print 5  LoseRenown Goto GoEndBattle>
	nu2 <if= T2 0 Return   if= SelfArenaState NAV_AS_Battle SetSelfArenaState NAV_AS_Win   Alert 6 Print 6  AddSelfArenaWin  AddSelfArenaThreat d10  XPV 100 FacXP+ 5 1 AddRenown 1 ifNPCOK SelfChallengerID else GoEndBattle ForceChat SelfChallengerID Goto GoEndBattle>
	GoEndBattle <ifNPCOK SelfChallengerID MoveAndPacifyNPC SelfChallengerID SelfChallengerHome ClearSelfChallengerID>
	Msg1 <You enter the arena. Prepare to battle.>
	Msg2 <The arena battle rages on.>
	Msg3 <You enter the arena. There's no fight going on here now.>
	Msg5 <You have lost the battle.>
	Msg6 <You have won the battle.>
	sub
		Team 1
		name <Player Team>
		SetEnemy 2
		ParaX 5
		ParaY 25

		Team 2
		name <Enemies>
		faction <PDASS>
		SetEnemy 1
		lua
			P.DEPLOY = function( self )
				if ( self:GetArenaState() == NAV_AS_READY ) and ( self:GetArenaForces() > 0 ) then
					gh_DeployRandomMecha( 2 , self:GetArenaThreat() , self:GetArenaForces() )
				end
			end
		endlua

		Deploy <if= SelfArenaState NAV_AS_Ready ifG SelfArenaForces 0 WMecha 2 SelfArenaThreat SelfArenaForces>
		ParaX 45
		ParaY 25
	end



%%  ********************
%%  ***   DUNGEONS   ***
%%  ********************

MetaScene
	name <# Tower>
	desig <QS_Dungeon_UrbanHellHole>
	special <NOEXIT>
	type <DUNGEON building condemned>
	dentrance <*GoUp>
	content1 <Some 1 40 Sub *DUNGEON_THREAT>
	content2 <Some 1 45 Sub *DUNGEON_DECOR>
	content3 <Some 1 30 Sub *DUNGEON_REWARD>
	mapwidth 25
	mapheight 25
	ComplexMap
	Ceiling
	LockedDoorChance 15
	SecretDoorChance 5
	NeededCells 3
	start <Print 1>
	msg1 <You enter \SCENE SceneID .>
	sub
		Team 1
		SetEnemy 2

		Team 2
		name <Monster>
		type <City Vermin Criminal>
		SetEnemy 1
		Stat 2 1

		room
		width 3
		height 3
		sub
			StairsDown
			Destination -1
		end
	end

MetaScene
	name <# Sewer>
	desig <QS_Dungeon_Sewer>
	special <NOEXIT>
	type <DUNGEON sewer>
	dentrance <*GoDown>
	content1 <Some 1 50 Sub *DUNGEON_THREAT>
	content2 <Some 1 45 Sub *DUNGEON_DECOR>
	content3 <Some 1 20 Sub *DUNGEON_REWARD>
	mapwidth 30
	mapheight 30
	MonkeyMap
	Ceiling
	LockedDoorChance 12
	SecretDoorChance 20
	MarbleType 7
	NeededCells 3
	start <Print 1>
	msg1 <You enter \SCENE SceneID .>
	sub
		Team 1
		SetEnemy 2

		Team 2
		name <Monster>
		type <City Water Reptile Fungus Sewer>
		SetEnemy 1
		Stat 2 1

		room
		width 3
		height 3
		sub
			StairsUp
			Destination -1
		end
	end


MetaScene
	name <the S.S. #>
	desig <QS_Dungeon_Derelict>
	special <NOEXIT>
	type <DUNGEON ruin derelict>
	terrain <SPACE>
	dentrance <*GoDown>
	content1 <Some 1 40 Sub *DUNGEON_THREAT>
	content2 <Some 1 45 Sub *DUNGEON_DECOR>
	content3 <Some 1 30 Sub *DUNGEON_REWARD>
	% Suffocation effect...
	Vacuum
	mapwidth 35
	mapheight 35
	MonkeyMap
	Ceiling
	LockedDoorChance 12
	SecretDoorChance 10
	IndustrialTiles
	NeededCells 3
	start <Print 1>
	msg1 <You enter \SCENE SceneID .>
	sub
		Team 1
		SetEnemy 2

		Team 2
		name <Monster>
		type <Fungus Exorg Ruin PreZero>
		SetEnemy 1
		Stat 2 1

		room
		width 3
		height 3
		sub
			Elevator
			Destination -1
		end
	end


MetaScene
	name <the # Wreck>
	desig <QS_Dungeon_TreasureWreck>
	special <NOEXIT>
	type <DUNGEON ruin derelict>
	terrain <SPACE>
	dentrance <*GoDown>
	content1 <Some 2 60 Sub *DUNGEON_THREAT>
	content2 <Some 1 45 Sub *DUNGEON_DECOR>
	content3 <Some 1  5 Sub *DUNGEON_REWARD>
	content4 <Some 1 40 Sub *TREASUREROOM_WRECK>
	% Suffocation effect...
	Vacuum
	mapwidth 49
	mapheight 49
	MonkeyMap
	Ceiling
	LockedDoorChance 17
	SecretDoorChance 20
	IndustrialTiles
	NeededCells 5
	start <Print 1>
	msg1 <You enter \SCENE SceneID .>
	sub
		Team 1
		SetEnemy 2

		Team 2
		name <Monster>
		type <Fungus Exorg Ruin PreZero>
		SetEnemy 1
		Stat 2 1

		room
		width 3
		height 3
		sub
			Elevator
			Destination -1
		end
	end

MetaScene
	name <# Asteroid>
	desig <QS_Dungeon_AsteroidCave>
	special <NOEXIT>
	type <DUNGEON asteroid cave>
	terrain <SPACE>
	habitat <SPACE.ASTER>
	dentrance <*GoDown>
	content1 <Some 1 45 Sub *DUNGEON_THREAT>
	content2 <Some 1 40 Sub *DUNGEON_DECOR>
	content3 <Some 1 30 Sub *DUNGEON_REWARD>
	% Suffocation effect...
	Vacuum
	Ceiling
	mapwidth 30
	mapheight 30
	CaveMap
	RockyTiles
	NeededCells 3
	start <Print 1>
	msg1 <You enter \SCENE SceneID .>
	sub
		Team 1
		SetEnemy 2

		Team 2
		name <Monster>
		type <Cave Exorg Fungus Asteroid>
		SetEnemy 1
		Stat 2 1

		room
		width 3
		height 3
		sub
			StairsUp
			Destination -1
		end
	end

MetaScene
	name <# Mine>
	desig <QS_Dungeon_AsteroidMine>

	special <NOEXIT>
	type <DUNGEON asteroid mine>
	terrain <SPACE>
	habitat <SPACE.ASTER>
	dentrance <*GoDown>
	content1 <Some 1 40 Sub *DUNGEON_THREAT>
	content2 <Some 1 45 Sub *DUNGEON_DECOR>
	content3 <Some 1 30 Sub *DUNGEON_REWARD>
	% Suffocation effect...
	Vacuum
	mapwidth 30
	mapheight 30
	CaveMap
	Ceiling
	RockyTiles

	NeededCells 3

	start <Print 1>
	msg1 <You enter \SCENE SceneID .>

	sub
		Team 1
		SetEnemy 2

		Team 2
		name <Monster>
		type <Mine Fungus Asteroid>
		SetEnemy 1
		Stat 2 1

		room
		width 3
		height 3
		sub
			StairsUp
			Destination -1
		end
	end

